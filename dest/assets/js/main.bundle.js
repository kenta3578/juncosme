!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function o(e){var t=document.querySelector(".js-Header__Title"),n=document.querySelector(".js-Header"),o=document.querySelector(".js-toggleMenu"),r=document.querySelector(".menuButton"),i=$(".js-ToggleCls");function s(){t.classList.remove("header__Title-OnToggle"),n.classList.remove("header-OnToggle"),n.classList.add("header-OnContens"),t.classList.add("header__Title-OnContens"),r.classList.add("menuButton-OnContents")}n.classList.contains("js-Header-Sub")?s():jQuery(window).scroll((function(){var i=jQuery(document).scrollTop();e<769&&i>800&&!o.classList.contains("toggleShowAnime")||e>769&&i>200&&!o.classList.contains("toggleShowAnime")?s():(n.classList.remove("header-OnContens"),t.classList.remove("header__Title-OnContens"),r.classList.remove("menuButton-OnContents"))})),r.addEventListener("click",(function(e){var i;e.preventDefault(),o.classList.toggle("toggleShowAnime"),this.classList.toggle("active"),i=jQuery(document).scrollTop(),t.classList.contains("header__Title-OnToggle")?i<800&&!n.classList.contains("js-Header-Sub")?(t.classList.remove("header__Title-OnToggle"),n.classList.remove("header-OnToggle")):s():(t.classList.add("header__Title-OnToggle"),n.classList.add("header-OnToggle"),console.log("NO"),r.classList.remove("menuButton-OnContents"))})),i.click((function(){o.classList.toggle("toggleShowAnime"),s(),r.classList.toggle("active")}))}function r(){var e=document.getElementsByClassName("js-animation");if(e)for(var t=window.innerHeight>768?200:40,n=window.pageYOffset,o=window.innerHeight,r=0;r<e.length;r++){var i=n+e[r].getBoundingClientRect().top;n+o-t>i&&e[r].classList.add("is-show")}}function i(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return s(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var o=0,r=function(){};return{s:r,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,l=!0,a=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return l=e.done,e},e:function(e){a=!0,i=e},f:function(){try{l||null==n.return||n.return()}finally{if(a)throw i}}}}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.r(t);var a=$(window).width();document.addEventListener("DOMContentLoaded",(function(){var e,t;!function(){var e,t=$(".js-Pop"),n=document.querySelector(".eventPop");t.on("click",(function(t){return t.preventDefault(),e=$(this).data("index"),n.style="display:block",document.querySelector('.js-PopContent[data-index="'.concat(e,'"]')).classList.toggle("popShow"),e}));var o,r=i(document.querySelectorAll(".js-eventPop__Close"));try{var s=function(){var t=o.value;t.addEventListener("click",(function(o){t.classList.contains("eventPop__CloseOuter")&&o.preventDefault(),n.style="display:none",document.querySelector('.js-PopContent[data-index="'.concat(e,'"]')).classList.toggle("popShow")}))};for(r.s();!(o=r.n()).done;)s()}catch(e){r.e(e)}finally{r.f()}}(),o(a),function(e){$(".js-SliedTriger").on("click",(function(t){t.preventDefault();var n=$(".toggleShowAnime-isPc"),o=$(this).parent().next();e<800?o.toggle("swing"):o.hasClass("toggleShowAnime-isPc")?(o.removeClass("toggleShowAnime-isPc"),o.addClass("toggleHideAnime-isPc")):(n.removeClass("toggleShowAnime-isPc"),o.addClass("toggleShowAnime-isPc"),o.removeClass("toggleHideAnime-isPc")),$(this).toggleClass("toggleMenu_link-Nav-Toggle")})),$(".toggleClose-isPc").on("click",(function(e){e.preventDefault(),console.log("OK"),$(".toggleShowAnime-isPc").removeClass("toggleShowAnime-isPc").addClass("toggleHideAnime-isPc")}))}(a),$(".js-toTop").click((function(){return $("html, body").animate({scrollTop:0},500,""),!1})),t=window.innerHeight,$(".js-slideButton").on("click",(function(){$("html, body").animate({scrollTop:t},500,"")})),navigator.userAgent.match(/(iPhone|iPad|iPod|Android)/)&&window.addEventListener("scroll",r),navigator.userAgent.match(/(iPhone|iPad|iPod|Android)/)||(r(),window.addEventListener("scroll",r)),new Swiper(".swiper-container",(l(e={effect:"swipe",loop:!0,pagination:".swiper-pagination",paginationClickable:!0,nextButton:".swiper-button-next",prevButton:".swiper-button-prev",slidesPerView:2},"loop",!0),l(e,"speed",1200),l(e,"autoplay",2e3),l(e,"spaceBetween",10),l(e,"breakpoints",{768:{slidesPerView:1}}),e))}),!1)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vanMvX21vZHVsZXMvX3RvZ2dsZU1lbnUuanMiLCJ3ZWJwYWNrOi8vLy4vanMvX21vZHVsZXMvX3Nob3dFbGVtZW50QW5pbWF0aW9uLmpzIiwid2VicGFjazovLy8uL2pzL21haW4uanMiLCJ3ZWJwYWNrOi8vLy4vanMvX21vZHVsZXMvX3NsaWRlV2luZG93LmpzIiwid2VicGFjazovLy8uL2pzL19tb2R1bGVzL19wb3BDb250ZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9qcy9fbW9kdWxlcy9fc2xpZGVNZW51LmpzIiwid2VicGFjazovLy8uL2pzL19tb2R1bGVzL19zbW9vdGhTY3JvbGwuanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJ0b2dnbGVNZW51Iiwid2luZG93V2lkdGgiLCJoZWFkZXJUaXRsZSIsImRvY3VtZW50IiwiaGVhZGVyIiwidG9nZ2xlV2luZG93IiwidG9nZ2xlQnV0dG9uIiwiJHRvZ2dsZUNsc0xpbmsiLCIkIiwiaGVhZGVyQ29sb3JPbkNvbnRlbnRzIiwialF1ZXJ5Iiwid2luZG93WU9mZnNldCIsImV2IiwidGhpcyIsImNvbnNvbGUiLCJzaG93RWxlbWVudEFuaW1hdGlvbiIsImVsZW1lbnQiLCJzaG93VGltaW5nIiwid2luZG93Iiwic2Nyb2xsWSIsIndpbmRvd0giLCJlbGVtWSIsInNsaWRlTGVuZ3RoIiwiJHBvcCIsInBvcFdpbmRvdyIsInNob3dOdW0iLCJjbHNCdXR0b24iLCJwb3BDb250ZW50cyIsIiRzbGlkZVRyaWdlciIsIk5vd1Nob3dNZW51IiwiJHRoaXNTbGlkZU1lbnVzIiwiY2xzQnRuIiwibm93U2hvd01lbnUiLCJzbGlkZU1lbnUiLCJzY3JvbGxUb3AiLCIkc2xpZGVUcmlnZ2VyIiwibmF2aWdhdG9yIiwiZWZmZWN0IiwibG9vcCIsInBhZ2luYXRpb24iLCJwYWdpbmF0aW9uQ2xpY2thYmxlIiwibmV4dEJ1dHRvbiIsInByZXZCdXR0b24iLCJzbGlkZXNQZXJWaWV3IiwiNzY4Il0sIm1hcHBpbmdzIjoiYUFDRSxJQUFJQSxFQUFtQixHQUd2QixTQUFTQyxFQUFvQkMsR0FHNUIsR0FBR0YsRUFBaUJFLEdBQ25CLE9BQU9GLEVBQWlCRSxHQUFVQyxRQUduQyxJQUFJQyxFQUFTSixFQUFpQkUsR0FBWSxDQUN6Q0csRUFBR0gsRUFDSEksR0FBRyxFQUNISCxRQUFTLElBVVYsT0FOQUksRUFBUUwsR0FBVU0sS0FBS0osRUFBT0QsUUFBU0MsRUFBUUEsRUFBT0QsUUFBU0YsR0FHL0RHLEVBQU9FLEdBQUksRUFHSkYsRUFBT0QsUUFLZkYsRUFBb0JRLEVBQUlGLEVBR3hCTixFQUFvQlMsRUFBSVYsRUFHeEJDLEVBQW9CVSxFQUFJLFNBQVNSLEVBQVNTLEVBQU1DLEdBQzNDWixFQUFvQmEsRUFBRVgsRUFBU1MsSUFDbENHLE9BQU9DLGVBQWViLEVBQVNTLEVBQU0sQ0FBRUssWUFBWSxFQUFNQyxJQUFLTCxLQUtoRVosRUFBb0JrQixFQUFJLFNBQVNoQixHQUNYLG9CQUFYaUIsUUFBMEJBLE9BQU9DLGFBQzFDTixPQUFPQyxlQUFlYixFQUFTaUIsT0FBT0MsWUFBYSxDQUFFQyxNQUFPLFdBRTdEUCxPQUFPQyxlQUFlYixFQUFTLGFBQWMsQ0FBRW1CLE9BQU8sS0FRdkRyQixFQUFvQnNCLEVBQUksU0FB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eUJBQ0xBLHNDQUNBQSxxQ0FFQUQsc0NBQ0FDLG1DQUNBQSx1Q0FFRnRCLHFEQUdhQSxFQUFmLHFCQUNBdUIsWUFBbUIsWUFDakJuQixtQkFDQUUsa0JBQ29CTixFQUFwQix5QkFDQXdCLHdFSEZBQyxJSXZCRnpCLHNCQUFxQixXQUduQixPQURBQSx3QkFBd0IsQ0FBRTBCLFVBQVcsR0FBckMxQixTQUNBLEtISkljLEVBQWNKLE9BQXBCLFlBQ3NCVixFQUF0QixtQkFDQTJCLFlBQTBCLFdBQ3hCM0Isd0JBQXdCLENBQUUwQixVQUFXWixHQUFyQ2QsV0QyQkk0QiwwQkFBSiwrQkFDRWxCLG9DQUVHa0IsMEJBQUwsZ0NBQ0VyQixJQUNBRyxxQ0FFRixxQ0FDRW1CLE9BREYsUUFFRUMsTUFGRixFQUdFQyxXQUhGLHFCQUlFQyxxQkFKRixFQUtFQyxXQUxGLHNCQU1FQyxXQU5GLHNCQU9FQyxjQUFlLEdBUGpCLDBGQWFlLENBQ1hDLElBQUssQ0FDSEQsY0FBZSxLQS9CakIsT0FGUnhDIiwiZmlsZSI6Im1haW4uYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDApO1xuIiwiZXhwb3J0IGZ1bmN0aW9uIHRvZ2dsZU1lbnUod2luZG93V2lkdGgpIHtcbiAgY29uc3QgaGVhZGVyVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmpzLUhlYWRlcl9fVGl0bGVcIik7XG4gIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuanMtSGVhZGVyXCIpO1xuICBjb25zdCB0b2dnbGVXaW5kb3cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmpzLXRvZ2dsZU1lbnVcIik7XG4gIGNvbnN0IHRvZ2dsZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubWVudUJ1dHRvblwiKTtcbiAgY29uc3QgJHRvZ2dsZUNsc0xpbmsgPSAkKFwiLmpzLVRvZ2dsZUNsc1wiKTtcbiAgaWYgKGhlYWRlci5jbGFzc0xpc3QuY29udGFpbnMoXCJqcy1IZWFkZXItU3ViXCIpKSB7XG4gICAgaGVhZGVyQ29sb3JPbkNvbnRlbnRzKCk7XG4gIH0gZWxzZSB7XG4gICAgaGVhZGVyU2Nyb2xsQ2hhbmdlKCk7XG4gIH1cbiAgLy8g44OI44Kw44Or44Oc44K/44Oz44Gr44KI44KL5Yi25b6hXG4gIHRvZ2dsZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2KSB7XG4gICAgZXYucHJldmVudERlZmF1bHQoKTtcbiAgICB0b2dnbGVXaW5kb3cuY2xhc3NMaXN0LnRvZ2dsZShcInRvZ2dsZVNob3dBbmltZVwiKTtcbiAgICB0aGlzLmNsYXNzTGlzdC50b2dnbGUoXCJhY3RpdmVcIik7XG4gICAgaGVhZGVyQnV0dG9uQ2hhbmdlKCk7XG4gIH0pO1xuICAkdG9nZ2xlQ2xzTGluay5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgdG9nZ2xlV2luZG93LmNsYXNzTGlzdC50b2dnbGUoXCJ0b2dnbGVTaG93QW5pbWVcIik7XG4gICAgaGVhZGVyQ29sb3JPbkNvbnRlbnRzKCk7XG4gICAgdG9nZ2xlQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoXCJhY3RpdmVcIik7XG4gICAgLy8gaGVhZGVyQnV0dG9uQ2hhbmdlKClcbiAgfSk7XG4gIC8vIOOCueOCr+ODreODvOODq+mHj+OBq+OCiOOCi+WItuW+oVxuICBmdW5jdGlvbiBoZWFkZXJCdXR0b25DaGFuZ2UoKSB7XG4gICAgbGV0IHdpbmRvd1lPZmZzZXQgPSBqUXVlcnkoZG9jdW1lbnQpLnNjcm9sbFRvcCgpO1xuXG4gICAgaWYgKCFoZWFkZXJUaXRsZS5jbGFzc0xpc3QuY29udGFpbnMoXCJoZWFkZXJfX1RpdGxlLU9uVG9nZ2xlXCIpKSB7XG4gICAgICBoZWFkZXJDb2xvck9uVG9nZ2xlKCk7XG4gICAgICBjb25zb2xlLmxvZyhcIk5PXCIpO1xuICAgICAgdG9nZ2xlQ29sb3IoKTtcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgd2luZG93WU9mZnNldCA8IDgwMCAmJlxuICAgICAgIWhlYWRlci5jbGFzc0xpc3QuY29udGFpbnMoXCJqcy1IZWFkZXItU3ViXCIpXG4gICAgKSB7XG4gICAgICBoZWFkZXJDb2xvck9uVG9wKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGhlYWRlckNvbG9yT25Db250ZW50cygpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhlYWRlclNjcm9sbENoYW5nZSgpIHtcbiAgICBqUXVlcnkod2luZG93KS5zY3JvbGwoZnVuY3Rpb24gKCkge1xuICAgICAgLy8g44K544Kv44Ot44O844Or5q+O44Gr44Kk44OZ44Oz44OI44GM55m654Gr44GX44G+44GZ44CCXG4gICAgICBsZXQgd2luZG93WU9mZnNldCA9IGpRdWVyeShkb2N1bWVudCkuc2Nyb2xsVG9wKCk7XG4gICAgICBpZiAoXG4gICAgICAgIHdpbmRvd1dpZHRoIDwgNzY5ICYmXG4gICAgICAgIHdpbmRvd1lPZmZzZXQgPiA4MDAgJiZcbiAgICAgICAgIXRvZ2dsZVdpbmRvdy5jbGFzc0xpc3QuY29udGFpbnMoXCJ0b2dnbGVTaG93QW5pbWVcIilcbiAgICAgICkge1xuICAgICAgICBoZWFkZXJDb2xvck9uQ29udGVudHMoKTtcbiAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgIHdpbmRvd1dpZHRoID4gNzY5ICYmXG4gICAgICAgIHdpbmRvd1lPZmZzZXQgPiAyMDAgJiZcbiAgICAgICAgIXRvZ2dsZVdpbmRvdy5jbGFzc0xpc3QuY29udGFpbnMoXCJ0b2dnbGVTaG93QW5pbWVcIilcbiAgICAgICkge1xuICAgICAgICBoZWFkZXJDb2xvck9uQ29udGVudHMoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGhpZGVIZWFkZXIoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICAvLyDoibLlpInmm7TmqZ/og73nvqRcbiAgZnVuY3Rpb24gaGVhZGVyQ29sb3JPblRvZ2dsZSgpIHtcbiAgICBoZWFkZXJUaXRsZS5jbGFzc0xpc3QuYWRkKFwiaGVhZGVyX19UaXRsZS1PblRvZ2dsZVwiKTtcbiAgICBoZWFkZXIuY2xhc3NMaXN0LmFkZChcImhlYWRlci1PblRvZ2dsZVwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhlYWRlckNvbG9yT25Ub3AoKSB7XG4gICAgaGVhZGVyVGl0bGUuY2xhc3NMaXN0LnJlbW92ZShcImhlYWRlcl9fVGl0bGUtT25Ub2dnbGVcIik7XG4gICAgaGVhZGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJoZWFkZXItT25Ub2dnbGVcIik7XG4gIH1cblxuICBmdW5jdGlvbiBoZWFkZXJDb2xvck9uQ29udGVudHMoKSB7XG4gICAgaGVhZGVyVGl0bGUuY2xhc3NMaXN0LnJlbW92ZShcImhlYWRlcl9fVGl0bGUtT25Ub2dnbGVcIik7XG4gICAgaGVhZGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJoZWFkZXItT25Ub2dnbGVcIik7XG4gICAgaGVhZGVyLmNsYXNzTGlzdC5hZGQoXCJoZWFkZXItT25Db250ZW5zXCIpO1xuICAgIGhlYWRlclRpdGxlLmNsYXNzTGlzdC5hZGQoXCJoZWFkZXJfX1RpdGxlLU9uQ29udGVuc1wiKTtcbiAgICB0b2dnbGVCdXR0b24uY2xhc3NMaXN0LmFkZChcIm1lbnVCdXR0b24tT25Db250ZW50c1wiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRvZ2dsZUNvbG9yKCkge1xuICAgIHRvZ2dsZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKFwibWVudUJ1dHRvbi1PbkNvbnRlbnRzXCIpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGlkZUhlYWRlcigpIHtcbiAgICBoZWFkZXIuY2xhc3NMaXN0LnJlbW92ZShcImhlYWRlci1PbkNvbnRlbnNcIik7XG4gICAgaGVhZGVyVGl0bGUuY2xhc3NMaXN0LnJlbW92ZShcImhlYWRlcl9fVGl0bGUtT25Db250ZW5zXCIpO1xuICAgIHRvZ2dsZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKFwibWVudUJ1dHRvbi1PbkNvbnRlbnRzXCIpO1xuICB9XG59IiwiZXhwb3J0IGZ1bmN0aW9uIHNob3dFbGVtZW50QW5pbWF0aW9uKCkge1xuXG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnanMtYW5pbWF0aW9uJyk7XG4gIGlmICghZWxlbWVudCkgcmV0dXJuOyAvLyDopoHntKDjgYzjgarjgYvjgaPjgZ/jgonlh6bnkIbjgpLjgq3jg6Pjg7Pjgrvjg6tcblxuICB2YXIgc2hvd1RpbWluZyA9IHdpbmRvdy5pbm5lckhlaWdodCA+IDc2OCA/IDIwMCA6IDQwOyAvLyDopoHntKDjgYzlh7rjgabjgY/jgovjgr/jgqTjg5/jg7PjgrDjga/jgZPjgZPjgafoqr/mlbRcbiAgdmFyIHNjcm9sbFkgPSB3aW5kb3cucGFnZVlPZmZzZXQ7XG4gIHZhciB3aW5kb3dIID0gd2luZG93LmlubmVySGVpZ2h0O1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgZWxlbWVudC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBlbGVtQ2xpZW50UmVjdCA9IGVsZW1lbnRbaV0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7IHZhciBlbGVtWSA9IHNjcm9sbFkgKyBlbGVtQ2xpZW50UmVjdC50b3A7IGlmIChzY3JvbGxZICsgd2luZG93SCAtIHNob3dUaW1pbmcgPiBlbGVtWSkge1xuICAgICAgZWxlbWVudFtpXS5jbGFzc0xpc3QuYWRkKCdpcy1zaG93Jyk7XG4gICAgfSBlbHNlIGlmIChzY3JvbGxZICsgd2luZG93SCA8IGVsZW1ZKSB7XG4gICAgICAvLyDkuIrjgavjgrnjgq/jg63jg7zjg6vjgZfjgablho3luqbpnZ7ooajnpLrjgavjgZnjgovloLTlkIjjga/jgZPjgaHjgonjgpLoqJjov7BcblxuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IHtcbiAgdG9nZ2xlTWVudVxufSBmcm9tIFwiLi9fbW9kdWxlcy9fdG9nZ2xlTWVudS5qc1wiO1xuaW1wb3J0IHtcbiAgc2xpZGVNZW51XG59IGZyb20gXCIuL19tb2R1bGVzL19zbGlkZU1lbnUuanNcIjtcbmltcG9ydCB7XG4gIHNob3dFbGVtZW50QW5pbWF0aW9uXG59IGZyb20gXCIuL19tb2R1bGVzL19zaG93RWxlbWVudEFuaW1hdGlvbi5qc1wiO1xuaW1wb3J0IHtcbiAgcG9wQ29udGVudHNcbn0gZnJvbSBcIi4vX21vZHVsZXMvX3BvcENvbnRlbnRzLmpzXCI7XG5pbXBvcnQge1xuICBzbW9vdGhTY3JvbGxcbn0gZnJvbSBcIi4vX21vZHVsZXMvX3Ntb290aFNjcm9sbC5qc1wiO1xuaW1wb3J0IHtcbiAgc2xpZGVXaW5kb3dcbn0gZnJvbSBcIi4vX21vZHVsZXMvX3NsaWRlV2luZG93LmpzXCI7XG5cbmNvbnN0IHdpbmRvd1dpZHRoID0gJCh3aW5kb3cpLndpZHRoKCk7XG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFxuICBcIkRPTUNvbnRlbnRMb2FkZWRcIixcbiAgKCkgPT4ge1xuICAgIHBvcENvbnRlbnRzKCk7XG4gICAgdG9nZ2xlTWVudSh3aW5kb3dXaWR0aCk7XG4gICAgc2xpZGVNZW51KHdpbmRvd1dpZHRoKTtcbiAgICBzbW9vdGhTY3JvbGwoKTtcbiAgICBzbGlkZVdpbmRvdygpO1xuICAgIC8vbGV0IHRoaXNVcmwgPSBsb2NhdGlvbi5ocmVmXG4gICAgLy8gaWYgKHRoaXNVcmwuaW5kZXhPZihcIiNcIikgPT0gLTEpIHtcbiAgICAvLyAgICQoXCIuanMtYW5pbWF0aW9uXCIpLnJlbW92ZUNsYXNzKFwiLmpzLWFuaW1hdGlvblwiKVxuICAgIGlmIChuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC8oaVBob25lfGlQYWR8aVBvZHxBbmRyb2lkKS8pKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLCBzaG93RWxlbWVudEFuaW1hdGlvbik7XG4gICAgfVxuICAgIGlmICghbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvKGlQaG9uZXxpUGFkfGlQb2R8QW5kcm9pZCkvKSkge1xuICAgICAgc2hvd0VsZW1lbnRBbmltYXRpb24oKTtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsIHNob3dFbGVtZW50QW5pbWF0aW9uKTtcbiAgICB9XG4gICAgbmV3IFN3aXBlcignLnN3aXBlci1jb250YWluZXInLCB7XG4gICAgICBlZmZlY3Q6IFwic3dpcGVcIixcbiAgICAgIGxvb3A6IHRydWUsXG4gICAgICBwYWdpbmF0aW9uOiAnLnN3aXBlci1wYWdpbmF0aW9uJyxcbiAgICAgIHBhZ2luYXRpb25DbGlja2FibGU6IHRydWUsXG4gICAgICBuZXh0QnV0dG9uOiAnLnN3aXBlci1idXR0b24tbmV4dCcsXG4gICAgICBwcmV2QnV0dG9uOiAnLnN3aXBlci1idXR0b24tcHJldicsXG4gICAgICBzbGlkZXNQZXJWaWV3OiAyLFxuXG4gICAgICBsb29wOiB0cnVlLFxuICAgICAgc3BlZWQ6IDEyMDAsXG4gICAgICBhdXRvcGxheTogMjAwMCxcbiAgICAgIHNwYWNlQmV0d2VlbjogMTAsXG4gICAgICBicmVha3BvaW50czoge1xuICAgICAgICA3Njg6IHtcbiAgICAgICAgICBzbGlkZXNQZXJWaWV3OiAxXG4gICAgICAgIH1cbiAgICAgIH1cblxuXG4gICAgfSlcblxuICAgIC8vfVxuXG4gICAgLy8g44OI44Kw44Or44Kq44O844OX44OK44O8ZXNjVG9nZ2xlXG4gIH0sXG4gIGZhbHNlXG4pOyIsImV4cG9ydCBmdW5jdGlvbiBzbGlkZVdpbmRvdygpIHtcbiAgY29uc3Qgc2xpZGVMZW5ndGggPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gIGNvbnN0ICRzbGlkZVRyaWdnZXIgPSAkKFwiLmpzLXNsaWRlQnV0dG9uXCIpO1xuICAkc2xpZGVUcmlnZ2VyLm9uKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICQoXCJodG1sLCBib2R5XCIpLmFuaW1hdGUoeyBzY3JvbGxUb3A6IHNsaWRlTGVuZ3RoIH0sIDUwMCwgXCJcIik7XG4gIH0pO1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIHBvcENvbnRlbnRzKCkge1xuICBjb25zdCAkcG9wID0gJChcIi5qcy1Qb3BcIilcbiAgY29uc3QgcG9wV2luZG93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5ldmVudFBvcFwiKVxuICBsZXQgc2hvd051bVxuICAkcG9wLm9uKCdjbGljaycsIGZ1bmN0aW9uIChldikge1xuICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgc2hvd051bSA9ICQodGhpcykuZGF0YShcImluZGV4XCIpO1xuICAgIHBvcFdpbmRvdy5zdHlsZSA9IFwiZGlzcGxheTpibG9ja1wiO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5qcy1Qb3BDb250ZW50W2RhdGEtaW5kZXg9XCIke3Nob3dOdW19XCJdYCkuY2xhc3NMaXN0LnRvZ2dsZShcInBvcFNob3dcIilcbiAgICByZXR1cm4gc2hvd051bTtcbiAgfSlcbiAgbGV0IGNsb3NlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuanMtZXZlbnRQb3BfX0Nsb3NlXCIpXG4gIGZvciAobGV0IGNsc0J1dHRvbiBvZiBjbG9zZXMpIHtcbiAgICBjbHNCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldiwgKSA9PiB7XG4gICAgICBpZiAoY2xzQnV0dG9uLmNsYXNzTGlzdC5jb250YWlucyhcImV2ZW50UG9wX19DbG9zZU91dGVyXCIpKSB7XG4gICAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB9XG4gICAgICBwb3BXaW5kb3cuc3R5bGUgPSBcImRpc3BsYXk6bm9uZVwiO1xuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLmpzLVBvcENvbnRlbnRbZGF0YS1pbmRleD1cIiR7c2hvd051bX1cIl1gKS5jbGFzc0xpc3QudG9nZ2xlKFwicG9wU2hvd1wiKVxuICAgIH0pXG4gIH1cblxufSIsImV4cG9ydCBmdW5jdGlvbiBzbGlkZU1lbnUod2luZG93V2lkdGgpIHtcbiAgY29uc3QgJHNsaWRlVHJpZ2VyID0gJChcIi5qcy1TbGllZFRyaWdlclwiKTtcblxuICAkc2xpZGVUcmlnZXIub24oXCJjbGlja1wiLCBmdW5jdGlvbihldikge1xuICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgTm93U2hvd01lbnUgPSAkKFwiLnRvZ2dsZVNob3dBbmltZS1pc1BjXCIpO1xuICAgIGNvbnN0ICR0aGlzU2xpZGVNZW51cyA9ICQodGhpcylcbiAgICAgIC5wYXJlbnQoKVxuICAgICAgLm5leHQoKTtcbiAgICBpZiAod2luZG93V2lkdGggPCA4MDApIHtcbiAgICAgICR0aGlzU2xpZGVNZW51cy50b2dnbGUoXCJzd2luZ1wiKTtcbiAgICB9IGVsc2UgaWYgKCR0aGlzU2xpZGVNZW51cy5oYXNDbGFzcyhcInRvZ2dsZVNob3dBbmltZS1pc1BjXCIpKSB7XG4gICAgICAkdGhpc1NsaWRlTWVudXMucmVtb3ZlQ2xhc3MoXCJ0b2dnbGVTaG93QW5pbWUtaXNQY1wiKTtcbiAgICAgICR0aGlzU2xpZGVNZW51cy5hZGRDbGFzcyhcInRvZ2dsZUhpZGVBbmltZS1pc1BjXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBOb3dTaG93TWVudS5yZW1vdmVDbGFzcyhcInRvZ2dsZVNob3dBbmltZS1pc1BjXCIpO1xuICAgICAgJHRoaXNTbGlkZU1lbnVzLmFkZENsYXNzKFwidG9nZ2xlU2hvd0FuaW1lLWlzUGNcIik7XG4gICAgICAkdGhpc1NsaWRlTWVudXMucmVtb3ZlQ2xhc3MoXCJ0b2dnbGVIaWRlQW5pbWUtaXNQY1wiKTtcbiAgICB9XG4gICAgJCh0aGlzKS50b2dnbGVDbGFzcyhcInRvZ2dsZU1lbnVfbGluay1OYXYtVG9nZ2xlXCIpO1xuICB9KTtcblxuICBjb25zdCBjbHNCdG4gPSAkKFwiLnRvZ2dsZUNsb3NlLWlzUGNcIik7XG4gIGNsc0J0bi5vbihcImNsaWNrXCIsIGZ1bmN0aW9uKGV2KSB7XG4gICAgZXYucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zb2xlLmxvZyhcIk9LXCIpO1xuICAgIGNvbnN0IG5vd1Nob3dNZW51ID0gJChcIi50b2dnbGVTaG93QW5pbWUtaXNQY1wiKTtcbiAgICBub3dTaG93TWVudVxuICAgICAgLnJlbW92ZUNsYXNzKFwidG9nZ2xlU2hvd0FuaW1lLWlzUGNcIilcbiAgICAgIC5hZGRDbGFzcyhcInRvZ2dsZUhpZGVBbmltZS1pc1BjXCIpO1xuICB9KTtcbn1cbiIsIi8vIOOCueODoOODvOOCueOCueOCr+ODreODvOODq1xuZXhwb3J0IGZ1bmN0aW9uIHNtb290aFNjcm9sbCgpIHtcbiAgJCgnLmpzLXRvVG9wJykuY2xpY2soZnVuY3Rpb24gKCkge1xuXG4gICAgJChcImh0bWwsIGJvZHlcIikuYW5pbWF0ZSh7IHNjcm9sbFRvcDogMCB9LCA1MDAsIFwiXCIpO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==