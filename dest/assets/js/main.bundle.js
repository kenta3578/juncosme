!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function o(e){var t=document.querySelector(".js-Header__Title"),n=document.querySelector(".js-Header"),o=document.querySelector(".js-toggleMenu"),r=document.querySelector(".menuButton"),i=$(".js-ToggleCls");function s(){t.classList.remove("header__Title-OnToggle"),n.classList.remove("header-OnToggle"),n.classList.add("header-OnContens"),t.classList.add("header__Title-OnContens"),r.classList.add("menuButton-OnContents")}n.classList.contains("js-Header-Sub")?s():jQuery(window).scroll((function(){var i=jQuery(document).scrollTop();e<769&&i>800&&!o.classList.contains("toggleShowAnime")||e>769&&i>200&&!o.classList.contains("toggleShowAnime")?s():(n.classList.remove("header-OnContens"),t.classList.remove("header__Title-OnContens"),r.classList.remove("menuButton-OnContents"))})),r.addEventListener("click",(function(e){var i;e.preventDefault(),o.classList.toggle("toggleShowAnime"),this.classList.toggle("active"),i=jQuery(document).scrollTop(),t.classList.contains("header__Title-OnToggle")?i<800&&!n.classList.contains("js-Header-Sub")?(t.classList.remove("header__Title-OnToggle"),n.classList.remove("header-OnToggle")):s():(t.classList.add("header__Title-OnToggle"),n.classList.add("header-OnToggle"),console.log("NO"),r.classList.remove("menuButton-OnContents"))})),i.click((function(){o.classList.toggle("toggleShowAnime"),s(),r.classList.toggle("active")}))}function r(){var e=document.getElementsByClassName("js-animation");if(e)for(var t=window.innerHeight>768?200:40,n=window.pageYOffset,o=window.innerHeight,r=0;r<e.length;r++){var i=n+e[r].getBoundingClientRect().top;n+o-t>i&&e[r].classList.add("is-show")}}function i(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return s(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var o=0,r=function(){};return{s:r,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,l=!0,a=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return l=e.done,e},e:function(e){a=!0,i=e},f:function(){try{l||null==n.return||n.return()}finally{if(a)throw i}}}}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}n.r(t);var l=$(window).width();document.addEventListener("DOMContentLoaded",(function(){var e;!function(){var e,t=$(".js-Pop"),n=document.querySelector(".eventPop");t.on("click",(function(t){return t.preventDefault(),e=$(this).data("index"),n.style="display:block",document.querySelector('.js-PopContent[data-index="'.concat(e,'"]')).classList.toggle("popShow"),e}));var o,r=i(document.querySelectorAll(".js-eventPop__Close"));try{var s=function(){var t=o.value;t.addEventListener("click",(function(o){t.classList.contains("eventPop__CloseOuter")&&o.preventDefault(),n.style="display:none",document.querySelector('.js-PopContent[data-index="'.concat(e,'"]')).classList.toggle("popShow")}))};for(r.s();!(o=r.n()).done;)s()}catch(e){r.e(e)}finally{r.f()}}(),o(l),function(e){$(".js-SliedTriger").on("click",(function(t){t.preventDefault();var n=$(".toggleShowAnime-isPc"),o=$(this).parent().next();e<800?o.toggle("swing"):o.hasClass("toggleShowAnime-isPc")?(o.removeClass("toggleShowAnime-isPc"),o.addClass("toggleHideAnime-isPc")):(n.removeClass("toggleShowAnime-isPc"),o.addClass("toggleShowAnime-isPc"),o.removeClass("toggleHideAnime-isPc")),$(this).toggleClass("toggleMenu_link-Nav-Toggle")})),$(".toggleClose-isPc").on("click",(function(e){e.preventDefault(),console.log("OK"),$(".toggleShowAnime-isPc").removeClass("toggleShowAnime-isPc").addClass("toggleHideAnime-isPc")}))}(l),$(".js-toTop").click((function(){return $("html, body").animate({scrollTop:0},500,""),!1})),e=window.innerHeight,$(".js-slideButton").on("click",(function(){$("html, body").animate({scrollTop:e},500,"")})),navigator.userAgent.match(/(iPhone|iPad|iPod|Android)/)&&window.addEventListener("scroll",r),navigator.userAgent.match(/(iPhone|iPad|iPod|Android)/)||(r(),window.addEventListener("scroll",r))}),!1)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,